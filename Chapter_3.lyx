#LyX 1.6.7 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\begin_preamble
\numberwithin{figure}{section}
\numberwithin{table}{section}
\end_preamble
\use_default_options true
\language english
\inputencoding auto
\font_roman palatino
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize 12
\spacing onehalf
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 20page%
\topmargin 15page%
\rightmargin 15page%
\bottommargin 15page%
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Section
Euler Delta Crossings Propagation
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Standard
Tractography methods provide a tool to resolve major neuronal fibre bundles
 non-invasively and in-vivo 
\begin_inset CommandInset citation
LatexCommand cite
key "Catani2002NeuroImage"

\end_inset

.
 From the development of the first tractography algorithms 
\begin_inset CommandInset citation
LatexCommand cite
key "MCC+99,CLC+99"

\end_inset

 published nearly 
\begin_inset Formula $12$
\end_inset

 years ago many methods have been invented which depend strictly on the
 underlying voxel model or acquisition paradigm making it very difficult
 for other researchers to apply their methods and evaluate their data sets.
 
\end_layout

\begin_layout Standard
In this work we designed a purely deterministic method which is fast, accurate
 and all-inclusive.
 But most importantly it can have as input model-based or model-free reconstruct
ion algorithms of most known algorithms.
 We call this algorithm EuDX.
 Eu stands for Euler integration, D stands for Delta function which is just
 a function that check for many different stopping criteria and X stands
 for fibre crossings.
 EuDX can deal with any number of crossings as long as your data supports
 them.
 The purpose of this algorithm is to be faithful to the reconstruction results
 rather than try to correct or enhance them by introducing regional or global
 considerations which is the topic of other methods reviewed below.
 Therefore, EuDX serves mainly as a robust method for quickly inspecting
 different reconstruction results using streamlines.
 EuDX is noise-friendly i.e.
 if a voxel is too noisy then EuDX will stop tracking on that voxel.
 This property is often useful when validating underlying reconstruction
 models.
 Branching is also supported by a combination of trilinear interpolation
 and propagating along multiple peaks per voxel.
 This method is an extension of the method used by Conturo et al.
\begin_inset CommandInset citation
LatexCommand cite
key "CLC+99"

\end_inset

 and Yeh et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Yeh2010"

\end_inset

 with the additional support for multiple fibre-crossings.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Small techical details in tractography propagation algorithm can create
 very different results.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In sections 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Tractography"

\end_inset

,
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Known-problems"

\end_inset

 we discussed some of the ideas and the problems behind the most popular
 propagation methods; deterministic and probabilistic.
 The focus in this section will be to give a more general overview and introduce
 many more methods.
\end_layout

\begin_layout Standard
Most tractography techniques can be grouped in three categories, as pointed
 out in Sotiropoulos thesis 
\begin_inset CommandInset citation
LatexCommand cite
key "sotiropoulos2010processing"

\end_inset

; local, global and simulated.
 Local approaches propagate a curve from a starting (seed) point using locally
 greedy criteria, i.e.
 tracking sequentially through orientation estimates in adjacent voxels.
 Global approaches identify the best path between two points of interest,
 according to some optimization criterion, rather than identifying paths
 arising from a single point.
 Simulated approaches comprise of algorithms that simulate the diffusion
 process or solve the diffusion equation to reconstruct white matter tracks.
\end_layout

\begin_layout Subsubsection
Local
\end_layout

\begin_layout Standard

\series bold
Deterministic 
\series default
tractography was the first to appear.
 Streamlines are created as trajectories orthograde and retrograde along
 an initial direction at a specific point (seed) in the 3D volume.
 In FACT
\begin_inset CommandInset citation
LatexCommand cite
key "MCC+99"

\end_inset

 streamlines are propagated in anequal steps governed by the entry point
 of the streamline in the voxel, Euler integration with equal steps was
 used in Conturo et al 
\begin_inset CommandInset citation
LatexCommand cite
key "CLC+99"

\end_inset

 and similarly Runge-Kutta integration was used in Basser et al.
\begin_inset CommandInset citation
LatexCommand cite
key "BPP+00"

\end_inset

.
 
\end_layout

\begin_layout Standard
Deterministic approaches usually stop when a low anisotropy region is encountere
d (e.g.
 FA drops below 
\begin_inset Formula $0.2$
\end_inset

) to avoid propagation within CSF or GM regions or a large angle changes
 occur (e.g.
 larger than 
\begin_inset Formula $45^{\circ}$
\end_inset

) between successive steps to avoid unrealistically sharp turns.
 
\end_layout

\begin_layout Standard
Streamline methods can be also utilized when multiple orientations are estimated
 in a voxel.
 These can be obtained as the principal eigenvectors of multiple Tensors
 fitted to the data 
\begin_inset CommandInset citation
LatexCommand cite
key "Tuch2002ThesisMIT"

\end_inset

, as the local peaks of the diffusion ODF estimated using DSI 
\begin_inset CommandInset citation
LatexCommand cite
key "wedeen2005mapping"

\end_inset

 or QBI 
\begin_inset CommandInset citation
LatexCommand cite
key "Tuch2004"

\end_inset

 and fibre ODFs 
\begin_inset CommandInset citation
LatexCommand cite
key "tournier2004direct"

\end_inset

.
 An approach to deal with these cases, chooses, upon entering a voxel, the
 orientation that produces the smallest curvature with the incoming path
 
\begin_inset CommandInset citation
LatexCommand cite
key "WWS+08"

\end_inset

.
 Another approach follows all orientations that do not exceed a curvature
 threshold, by initiating a new streamline per orientation 
\begin_inset CommandInset citation
LatexCommand cite
key "chao2008multiple"

\end_inset

,
\begin_inset CommandInset citation
LatexCommand cite
key "Descoteaux2009"

\end_inset

.
 
\end_layout

\begin_layout Standard
Streamline tractography utilizes only the fibre orientation estimates.
 Tensor deflection tractography (TEND) is a FACT variant that uses the whole
 DTI Tensor rather than just its principal eigenvector to determine the
 direction of curve propagation 
\lang british

\begin_inset CommandInset citation
LatexCommand cite
key "LWT+03"

\end_inset


\lang english
.
 
\end_layout

\begin_layout Standard
All the methods presented up to this point provide binary connectivity informati
on.
 A voxel B can be either connected or not connected to the seed S, depending
 on whether a streamline from S passes through B.
 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Streamline tractography utilizes only the fibre orientation estimates.
 In general, more information is available upon post-processing ofDWimages.
 For example, with DTI a diffusion tensor is computed.
 For perfectly spherical tensors the deflection angle is zero, while for
 oblate tensors, the deflection is towards the ellip- soid plane.
 Tensor deflection tractography is less sensitive to noise than streamline,
 as shown in simulations for straight tracts (Lazar et al., 2003).
 It can also propagate through regions of perpendicular fibre crossings,
 where the principal eigenvector of the underlying oblate Tensor is meaningless.
 However, Tensor deflection underestimates curvature for curved tracts.
 Furthermore, TEND results should be interpreted carefully, as an incoming
 direction that coincides with any of the Tensor eigenvectors will not be
 deflected by that Tensor; even if it is perpendicular to the principal
 eigenvector of a highly prolate Tensor (Lazar et al., 2003).
 All the methods presented in this section are deterministic and provide
 binary connectivity information.
 A voxel B can be either connected or not connected to the seed S, depending
 on whether a streamline from S passes through B.
 To tackle this issue, a group of probabilistic tractography approaches
 have been developed and these are presented in the following section.
\end_layout

\end_inset


\lang british
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\lang british
Other deterministic approaches can be found here A recent deterministic
 algorithm called Tensorlines
\begin_inset CommandInset citation
LatexCommand cite
key "weinstein1999tad"

\end_inset

 shares the problems of the other deterministic algorithms by failing in
 relatively sharp turns and Meyer's Loop.
 Furthermore, because these methods need a continuous field this necessitates
 the use of interpolation e.g.
 nearest, bicubic or trilinear.
 The amount and type of interpolation is another factor that can change
 dramatically the results of tractography and it is very rarely reported.
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
Probabilistic
\series default
 tractography was introduced by 
\begin_inset CommandInset citation
LatexCommand cite
key "Parker2003"

\end_inset

,
\begin_inset CommandInset citation
LatexCommand cite
key "Behrens2003MRM"

\end_inset

 and calculates a spatial distribution of tracks arising from a single seed
 rather than a single track.
 In each propagation step of each streamline, a random perturbation of the
 underlying fibre orientation estimate is followed.
 Perturbations are generated using functions that characterize the uncertainty
 in the fibre orientation within each voxel.
 A probabilistic index of connectivity (PICo) is defined between a seed
 and an arbitrary point as 
\begin_inset Formula $M/N$
\end_inset

 ; where 
\begin_inset Formula $N$
\end_inset

 is the number of all the tracks that start from the seed and 
\begin_inset Formula $M$
\end_inset

 is the number of tracks that traverse the seed and the arbitrary point.
\end_layout

\begin_layout Standard
Probabilistic approaches mainly differ in the way the orientation uncertainty
 is assessed.
 Most commonly a Bayesian framework will be used to calculate the posterior
 probability of the model orientation parameters 
\begin_inset CommandInset citation
LatexCommand cite
key "Behrens2003MRM"

\end_inset

,
\begin_inset CommandInset citation
LatexCommand cite
key "Behrens2007NeuroImage"

\end_inset

,
\begin_inset CommandInset citation
LatexCommand cite
key "hosey2005inference"

\end_inset

,
\begin_inset CommandInset citation
LatexCommand cite
key "friman2006bayesian"

\end_inset

 and 
\begin_inset CommandInset citation
LatexCommand cite
key "zhang2009probabilistic"

\end_inset

.
 In 
\begin_inset CommandInset citation
LatexCommand cite
key "Behrens2003MRM"

\end_inset

,
\begin_inset CommandInset citation
LatexCommand cite
key "Behrens2007NeuroImage"

\end_inset

 Monte Carlo-Markov chain (MCMC) is used to sample the orientation posterior
 distribution.
 In 
\begin_inset CommandInset citation
LatexCommand cite
key "friman2006bayesian"

\end_inset

 the posterior is computed numerically after using Dirac priors.
 In 
\begin_inset CommandInset citation
LatexCommand cite
key "zhang2009probabilistic"

\end_inset

 particle filtering is used for the same cause.
\end_layout

\begin_layout Standard

\series bold
Bootstrap
\series default
 tractography is an alternative method to characterize uncertainty in fibre
 orientation 
\begin_inset CommandInset citation
LatexCommand cite
key "pajevic2003parametric"

\end_inset

,
\begin_inset CommandInset citation
LatexCommand cite
key "lazar2005bootstrap"

\end_inset

.
 This is an non-parametric approach where a diffusion acquisition is repeated
 many times for the same subject and some images from this set are drawn
 in random with replacement.
 This is a single bootstrap sample.
 Drawing many samples will give a distribution for the fiber orientation.
 The advantage of bootstrap tractography is that no ad-hoc assumptions are
 made on the noise and it is sensitive to all sources of variability that
 affect the acquired dataset.
 The disadvantage is that many repeated acquisitions are required (at least
 5 for DTI according to 
\begin_inset CommandInset citation
LatexCommand cite
key "o2006just"

\end_inset

).
 
\end_layout

\begin_layout Standard
Model-based residual bootstrap offers an alternative, since it requires
 only a single data acquisition (Chung et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "chung2006comparison"

\end_inset

.;Berman et al., 2008 
\begin_inset CommandInset citation
LatexCommand cite
key "berman2008probabilistic"

\end_inset

; Haroon et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "haroon2009using"

\end_inset

; Jones et al.,  
\begin_inset CommandInset citation
LatexCommand cite
key "jones2008tractography"

\end_inset

).
 A single bootstrap sample can then be generated by permuting freely the
 residuals (or just the sings of the residuals - wild boostrap Jones et
 al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "jones2008tractography"

\end_inset

; Whitcher et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "whitcher2008using"

\end_inset

) between all model predicted values.
 The Bootstrap technique was first introduced by Efron 
\begin_inset CommandInset citation
LatexCommand cite
key "efron1979bootstrap"

\end_inset

 in 
\begin_inset Formula $1979$
\end_inset

.
\end_layout

\begin_layout Standard

\series bold
Other probabilistic
\emph on
 
\series default
\emph default
estimate the orientation uncertainty as an empeiricaly defined function.
 For example in 
\begin_inset CommandInset citation
LatexCommand cite
key "Parker2003"

\end_inset

 this is determined using the degree of FA.
 The higher the FA the higher the confidence on the principal eigenvector
 of the Tensor.
 In Parker and Alexander (2003)
\begin_inset CommandInset citation
LatexCommand cite
key "parker2003probabilistic"

\end_inset

 Monte-Carlo simulations are used to predict the orientation uncertainty
 for multiple Tensors and later in 2005 
\begin_inset CommandInset citation
LatexCommand cite
key "parker2005probabilistic"

\end_inset

 for PAS.
 In Descoteaux et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "descoteaux2009deterministic"

\end_inset

 the fODF was used for the same purpose.
 Cook et al.
 2004 
\begin_inset CommandInset citation
LatexCommand cite
key "cook2004modelling"

\end_inset

 used a Watson distribution and Seunarine et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "seunarine2007exploiting"

\end_inset

 used a Bingham distribution.
 Another interesting work was that of Bjornemo et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "bjornemoMICCAI02"

\end_inset

 who created regularized stochastic methods white matter tractography .
\end_layout

\begin_layout Subsubsection
Global
\end_layout

\begin_layout Standard
A limitation of probabilistic tractography is that the probabilistic index
 of connectivity decreases with distance from the seed point (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Tractography"

\end_inset

,
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Known-problems"

\end_inset

).
 Another limitation is that it is still sensitive to local noise.
 Global approaches try to overcome these limitations by becoming distance-indipe
ndent and by increasing resistance against noise.
 This is achieved by finding an optimal path between two voxels, according
 to a global property (see 
\begin_inset CommandInset citation
LatexCommand cite
key "DiffMRIBook"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "jbabdi2007bayesian"

\end_inset

 developed a 
\series bold
global Bayesian
\series default
 model to derive the posterior probability of connections.
 The path trajectories represented by splines are compatible with the local
 fibre orientations in regions with low uncertainty estimates.
 In regions with high uncertainty, the global connectivity information constrain
s the local parameter estimation and affects the path sampling.
\end_layout

\begin_layout Standard

\series bold
Front evolution 
\series default
techniques often employ fast marching.
 The front expands from the seed neighbours to the next neighbouring nodes
 with speeds determined by the local fibre orientations.
 As the front propagates, a time of front arrival can be associated with
 each visited voxel.
 Once all image voxels have been traversed by the front, paths of connection
 can be obtained going backwards in the map of front arrival times.
 Starting from an arbitrary voxel, a gradient descent algorithm can find
 the fastest route back to the seed.
 A connectivity index can be associated with each path, representing either
 the weakest link along the path or the agreement between the path tangents
 and the underlying vector orientation field.
 For more see 
\begin_inset CommandInset citation
LatexCommand cite
key "parker2002estimating"

\end_inset

,
\begin_inset CommandInset citation
LatexCommand cite
key "tournier2003diffusion"

\end_inset

,
\begin_inset CommandInset citation
LatexCommand cite
key "campbell2005flow"

\end_inset

,
\begin_inset CommandInset citation
LatexCommand cite
key "fletcher2007volumetric"

\end_inset

,
\begin_inset CommandInset citation
LatexCommand cite
key "gigandet2009global"

\end_inset

.
\end_layout

\begin_layout Standard

\series bold
Graph-based 
\series default
tractography utilises weighted networks (graphs) 
\begin_inset CommandInset citation
LatexCommand cite
key "IturriaMedina2007NeuroImage"

\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
key "zalesky2008dt"

\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
key "lifshits2009combinatorial"

\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
key "Fillard2009a"

\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
key "sotiropoulos2010brain"

\end_inset

.
 Each image voxel becomes a node in the graph where the edges of the graph
 connect pairs of neighbouring voxels or ROIs.
 The edges are assigned weights, that can be representative of any type
 of structural information.
 Anatomical paths are then defined as chains with successive elements being
 neighbouring voxels.
 The weights of the edges are used to determine the path strength.
 The strongest path between any image voxel and a seed can then be identified
 using algorithms that search efficiently the image graph.
\end_layout

\begin_layout Standard

\series bold
Energy Minimization
\series default
 methods try to optimize 
\begin_inset CommandInset citation
LatexCommand cite
key "kreher2008gibbs"

\end_inset

 all tracks from the whole brain volume simultaneously.
 Each tract is represented as a chain of cylinders, whose position and orientati
on can change.
 The method tries to find the set of cylinders that best approximate the
 underlying white matter bundles.
 This is achieved by minimizing an energy function, mimicking the polymerization
 process through which chains of monomers are created in an energetically-favour
able way.
 Usually Gibbs sampling is employed.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Kreher2008ISMRM"

\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
key "reisert2010global"

\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
key "lazar2002white"

\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
key "Fillard2009"

\end_inset

.
 Despite the very promising results 
\begin_inset CommandInset citation
LatexCommand cite
key "reisert2010global"

\end_inset

, the very high computation time is an important disadvantage of this framework.
\end_layout

\begin_layout Standard

\series bold
Microanatomy Tracking 
\series default
is a very exciting new family of algorithms which started with MicroTrack
\begin_inset CommandInset citation
LatexCommand cite
key "sherbondy2010microtrack"

\end_inset

 that combine global tractography and direct microstructure estimation using
 diffusion-weighted imaging data.
 Connectivity via tractography, axon diameter distribution and density estimates
 are all combined in order to inform one another given the common assumption
 that microstructural features remain consistent along fibers.
 This type of algorithms need of course data sets of acquisitions similar
 with that of ActiveAx 
\begin_inset CommandInset citation
LatexCommand cite
key "alexander2010orientationally"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Simulated
\end_layout

\begin_layout Standard
These methods simulate the diffusion of water molecules within the brain
 tissue or directly solve Fick’s second law of diffusion 
\begin_inset CommandInset citation
LatexCommand cite
key "batchelor2001study"

\end_inset

,
\begin_inset CommandInset citation
LatexCommand cite
key "kang2005white"

\end_inset

,
\begin_inset CommandInset citation
LatexCommand cite
key "hageman2009diffusion"

\end_inset

,
\begin_inset CommandInset citation
LatexCommand cite
key "hagmann2003dti"

\end_inset

.
\end_layout

\begin_layout Standard
In Batchelor et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "batchelor2001study"

\end_inset

, the diffusion equation is solved using a finite element approach.
 Successive diffusion simulations over the entire brain, starting froma
 seed, are performed in Kang et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "kang2005white"

\end_inset

.
 Tractography by simulating fluid flow through a 
\begin_inset Quotes eld
\end_inset

pressure
\begin_inset Quotes erd
\end_inset

 Tensor field is performed in Hageman et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "hageman2009diffusion"

\end_inset

.
 The Navier-Stokes equation is solved using a finite element approach.
 However, solving a partial differential equation increases execution time.
 Furthermore, it is not always easy with these approaches to obtain a connectivi
ty map across the whole brain volumeand there is usually a large number
 of parameters to set.
 
\end_layout

\begin_layout Standard
For further understanding of the current map of all the different tractography
 algorithms see the reviews from 
\begin_inset CommandInset citation
LatexCommand cite
key "fillard2011quantitative"

\end_inset

 ,
\begin_inset CommandInset citation
LatexCommand cite
key "sotiropoulos2010processing"

\end_inset

 and 
\begin_inset CommandInset citation
LatexCommand cite
key "Jbabdi2007"

\end_inset

.
 In Fillard et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "fillard2011quantitative"

\end_inset

 
\begin_inset Formula $10$
\end_inset

 tractographies were simulated using a novel hardware phantom.
 Generally speaking, comparing all these different methods which all have
 different parameters and are based on different underlying models is a
 difficult process and a ground truth from anatomical studies, digital or
 hardware phantoms is absolutely necessary.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
http://www.docstoc.com/docs/58019487/Diffusion-Tensor-MRI-at-3-Tesla
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Algorithm
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Decide if you need Then for the algorithms.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Itemize

\series bold
Input
\end_layout

\begin_layout Itemize
anisotropic volume metric
\end_layout

\begin_deeper
\begin_layout Itemize
unit directions 
\end_layout

\begin_layout Itemize
resampling sphere
\end_layout

\begin_layout Itemize
seeds
\end_layout

\begin_layout Itemize
anisotropy low threshold
\end_layout

\begin_layout Itemize
step size 
\end_layout

\begin_layout Itemize
angular threshold
\end_layout

\begin_layout Itemize
total_weighting threshold
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename EuDX_propagation.png
	lyxscale 30
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
A sketch output from EuDX.
 In this figure we see that in every voxel centre (black dot) there is one
 or more vectors.
 These vectors represent peaks where their length is equal to the anisotropy
 value and the direction is equal to direction of the peak e.g.
 calculated in a given ODF.
 EuDX can track multiple peaks starting from a single seed point (star)
 if their anisotropy values are higher than a threshold.
 In order to reduce memory usage we discretize the directions using the
 vertices of a unit sphere.
 Then we only need to input to EuDX a 4D volume with anisotropy values 
\begin_inset Formula $\mathcal{A}$
\end_inset

 and an 4D volume 
\begin_inset Formula $\mathcal{I}$
\end_inset

 with the indices of the directionse.
 The first three dimensions in 
\begin_inset Formula $\mathcal{A}$
\end_inset

 are for the voxel position and the last dimension is for the peak values
 (anisotropy).
 Respectively, first three dimensions in 
\begin_inset Formula $\mathcal{I}$
\end_inset

 are for the voxel position and the last dimension contains the indices
 of the directions(vertices) on a discrete sphere.
 In that way we track from the same seed towards different directions and
 support tracking in crossing areas.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "Flo:EuDX_sketch"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We created an algorithm that has many similarities with the classical determinis
tic methods 
\begin_inset CommandInset citation
LatexCommand cite
key "MCC+99,CLC+99,BPP+00"

\end_inset

 and with more recent as those described in 
\begin_inset CommandInset citation
LatexCommand cite
key "Descoteaux2009,Yeh2010"

\end_inset

.
 Our concentration was to create a more general streamline tractography
 propagation framework which can be used with very different families of
 anistropic functions and work well with fibre crossings.
 This algorithm that we call EuDX is applied usually in native space image
 coordinates and it assumes that the voxel dimensions are equal in all three
 dimensions (isotropic voxel size).
 In order to create streamlines (tracks) we need to provide initially one
 or more seed points 
\begin_inset Formula $S$
\end_inset

.
 These can be choosed randomly or we could specify them explicitly.
 However, these seed points need to be constrained by the volume's dimensions.
 Every seed point 
\begin_inset Formula $\mathbf{p}_{0}$
\end_inset

 becomes the starting point for the track propagation.
\end_layout

\begin_layout Standard
For the integration we solve for 
\begin_inset Formula $\mathbf{p}_{t}=\mathbf{p}_{0}+\int_{0}^{t}\mathbf{v}(p(\mathbf{s}))d\mathbf{s}$
\end_inset

 and we perform the integration numerically using Euler's method 
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\mathbf{p}_{n+1}=\mathbf{p}_{n}+\mathbf{v}(\mathbf{p}_{n})\Delta s\label{eq: euler}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\Delta s$
\end_inset

 is the propagation step size which should be at least smaller than the
 voxel size, 
\begin_inset Formula $\mathbf{v}$
\end_inset

 is the propagation direction.
 Alternatively, Runge-Kutta of 
\begin_inset Formula $2$
\end_inset

nd and 
\begin_inset Formula $4$
\end_inset

th order can be used.
 However, in this document we used only Euler's method.
 For EuDX stopping criteria we can use a standard scalar function like FA
 but we can also use vector functions like Quantitative Anisotropy (QA)
 or even the full Orientation Density Function (ODF).
 The only constraint for these functions is to be greater or equal to zero
 everywhere in the volume.
 In most cases all these functions try to measure in some way the anisotropy
 of diffusion in every single voxel so we decided to use letter 
\begin_inset Formula $\mathcal{A}$
\end_inset

 for the purpose of representing all these fields applied on the image grid.
 Therefore, when we write 
\begin_inset Formula $\mathcal{A}(\mathbf{u}_{i})=\alpha_{i}$
\end_inset

 this reads for the peak unit direction of 
\begin_inset Formula $\mathbf{u}_{i}$
\end_inset

 the peak value was 
\begin_inset Formula $\alpha_{i}$
\end_inset

.
 For the simple case of FA, 
\begin_inset Formula $\mathbf{u}$
\end_inset

 is equal with the eigenvector corresponding to the highest eigenvalue,
 
\begin_inset Formula $\mathcal{A}(\mathbf{e})=FA$
\end_inset

.
 For QA which can allow even for up to 
\begin_inset Formula $5$
\end_inset

 peaks or more we use 
\begin_inset Formula $\mathcal{A}(\mathbf{u}_{i})=QA_{i}$
\end_inset

 where 
\begin_inset Formula $i\in[0,4]$
\end_inset

 denotes the current peak.
 The peak can be characterised by two things the anisotropy value 
\begin_inset Formula $\alpha_{i}$
\end_inset

 and the unit direction of the peak 
\begin_inset Formula $\mathbf{u}_{i}$
\end_inset

.
 A visual example of the combination of multiple peaks togehter with EuDX
 can be seen in fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "Flo:EuDX_sketch"

\end_inset

.
\end_layout

\begin_layout Standard
The EuDX algorithm can be described further in the following way:
\end_layout

\begin_layout Standard
(1) 
\begin_inset Formula $\mathcal{A}(\mathbf{u}_{i})$
\end_inset

 is estimated at every point of the volume.
 This resembles a composite vector field where every point contains the
 peak directions superimposed to the anisotropy values.
 In order to reduce space 
\begin_inset Formula $\mathbf{u}$
\end_inset

 can be replaced by an index to the closest sampling point of an evenly
 distributed sphere.
 We create an empty list of tracks 
\begin_inset Formula $T=\emptyset$
\end_inset

 and then we generate random or prespecified seed points 
\begin_inset Formula $\mathbf{p}_{0j}$
\end_inset

 for every track 
\begin_inset Formula $t_{j}$
\end_inset

.
\end_layout

\begin_layout Standard
(2) We pick a seed point 
\begin_inset Formula $\mathbf{p}_{0}$
\end_inset

 and start propagating.
 We need to remember that the propagation direction can go forward and backward
 or better said; towards one direction (orthograde) and its opposite direction
 (retrograde).
 For the moment we only propagate towards one direction set by
\begin_inset Formula \begin{equation}
\mathbf{v}(\mathbf{p}_{0})=argmax_{u_{i}}\mathcal{A}(\mathbf{u})\label{eq:argmax_anisotropy}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
but we need to propagate also towards the opposite direction 
\begin_inset Formula $-\mathbf{v}(\mathbf{p}_{0})$
\end_inset

.
 Furthermore, as 
\begin_inset Formula $\mathcal{A}$
\end_inset

 can have multiple values in each voxel (representing different peaks) we
 need to remember that when we finish with this track followed by direction
 
\begin_inset Formula $\mathbf{v}$
\end_inset

 we will need to propagate towards the direction of second maximum, third
 maximum etc.
 This is necessary if and only if 
\begin_inset Formula $\mathcal{A}$
\end_inset

 gives information for multiple peaks (like in QA).
\end_layout

\begin_layout Standard
(3) Apart from the direction we need to check when to stop tracking.
 EuDX takes as input a low threshold for anisotropy 
\begin_inset Formula $\mathcal{A}_{thr}$
\end_inset

.
 If 
\begin_inset Formula $\mathcal{A}(\mathbf{p}_{n})<\mathcal{A}_{thr}$
\end_inset

 then EuDX stops propagating.
 Otherwise it appends the point to the current track 
\begin_inset Formula $t_{j}$
\end_inset

.
 This can be useful for cancelling out any seed points which are in the
 background or in very low anisotropy areas where tracking is not recommended.
 One important point here is that 
\begin_inset Formula $\mathcal{A}_{thr}$
\end_inset

 depends on the reconstruction method and it will have a different value
 for every different metric QA, FA, GFA etc.
 
\end_layout

\begin_layout Standard
(4) In order to generate smooth tractography it is recommended to use some
 kind of interpolation.
 Here we have been using trilinear interpolation which works in the following
 way.
 The seed devides the neibourhing area in 
\begin_inset Formula $8$
\end_inset

 regions in 3D (it would be 
\begin_inset Formula $4$
\end_inset

 in 2D) and the total contribution of the neighbouring points is added according
 to the weights 
\begin_inset Formula $w$
\end_inset

 of the antipodal side.
 The weights express subvolumes in 3D (or subareas in 2D).
 The trilinear interpolation will gives as the weights 
\begin_inset Formula $w$
\end_inset

 which will force the contribution of every neighbouring voxel.
\end_layout

\begin_layout Standard
(5) We find the nearest direction from the seed's initial direction 
\begin_inset Formula $\mathbf{v}(\mathbf{p_{n}})$
\end_inset

 to every 
\begin_inset Formula $\mathbf{u}_{i}$
\end_inset

 of every one of the 
\begin_inset Formula $8$
\end_inset

 corners of the neighbourhood of the seed.
 
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $\textnormal{arccos}(\mathbf{x}_{i},\mathbf{p}_{n})\leqq\theta_{thr}$
\end_inset

 we count the corresponding weight otherwise we continue to the next weight.
 We check simultanious;u for the condition 
\begin_inset Formula $\mathcal{A}(\mathbf{u})<\mathcal{A}_{thr}$
\end_inset

.
 All the adjacent weights will contribute to the new direction according
 to the following formula
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\mathbf{v}^{'}(\mathbf{p}_{n})=\sum_{m}w_{m}\mathbf{v}(\mathbf{p}_{n})\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\mathbf{v}(\mathbf{p}_{n})=\dfrac{\mathbf{v}^{'}(\mathbf{p}_{n})}{||\mathbf{v}^{'}(\mathbf{p}_{n})||}$
\end_inset

 is normalized.
\end_layout

\begin_layout Standard
(6) The next point is calculated with eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq: euler"

\end_inset

.
 We insert the new point in the track and continue tracking until one of
 the stopping criteria is met.
 Finally, we have to repeat the procedure for the opposite direction of
 the initial 
\begin_inset Formula $\mathbf{v}(\mathbf{p}_{o})$
\end_inset

 and for the smaller peaks as in (2).
\end_layout

\begin_layout Standard
There are some other necessary thresholds to keep in mind.
 Total weight 
\begin_inset Formula $TW$
\end_inset

 check that their is enough overall neighbourhood weighting to continue
 tracking (default 
\begin_inset Formula $0.5$
\end_inset

).
 This is very useful near edges ...EXPLAIN MORE!!!!.
 Also it is possible for a track to get trapped in a loop and start looping
 for ever.
 We can check for that using a threshold for number of loops 
\begin_inset Formula $MLP$
\end_inset

 (maximum loops).
 Finally, sometimes it is useful to remove the short or very long tracks.
 This is controlled by a length threshold which we denote with 
\begin_inset Formula $L$
\end_inset

.
\end_layout

\begin_layout Standard
SAY MORE ABOUT THE IMPORTANCE OF DELTA (INTUITION IS THAT YOU HAVE MULTIPLE
 STOPPING CRITERIA LIKE DELTA FUNCTION HAS MULTIPLE OUTCOMES?
\end_layout

\begin_layout Standard
The EuDX is called for every seed.
 In alg.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "Alg:EuDX_Main"

\end_inset

 we see how it can be called in order to create an entire tractography.
 The core part is given alg.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "Alg:EuDX_Both"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Input} $
\backslash
mathcal{A}$, $I$, $S$, $U$, 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{2.5em}  $
\backslash
mathcal{A}_{thr}$, $
\backslash
Delta S$, $
\backslash
theta_{thr}$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{2.5em} $L$, $TW$, $MLP$ 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
textbf{Output} $T$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\begin_layout Plain Layout

$T=
\backslash
emptyset$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
textbf{Foreach} seed 
\backslash
textbf{In} $S$
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{2em} 
\backslash
textbf{Foreach} peak 
\backslash
textbf{In} ($
\backslash
mathcal{A}$, $I$) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{4em} t = EUDX(seed,peak) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{4em} 
\backslash
textbf{Append}($T$,t) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
caption{EuDX ALL}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "Alg:EuDX_Main"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Input} seed, peak 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{2.5em} thresholds
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Output} track  
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Delta, 
\backslash
textbf{v} = Initial
\backslash
_Direction(seed) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
#propagate orthograde 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

direction=
\backslash
textbf{v} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
textbf{While} Delta 
\backslash
textbf{is} True
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{2em} Delta, n
\backslash
_direction = New
\backslash
_Direction(direction)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{2em} 
\backslash
textbf{If} Delta 
\backslash
textbf{is} False
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{4em} 
\backslash
textbf{Break} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{2em} 
\backslash
textbf{p} = 
\backslash
textbf{p} + $
\backslash
Delta S$$
\backslash
times$n
\backslash
_direction 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{2em} 
\backslash
textbf{Append}(track,point)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{2em} direction = n
\backslash
_direction 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Delta = True 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
#propagate retrograde 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

direction = - 
\backslash
textbf{v} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
#Same as before 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
caption{EuDX}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "Alg:EuDX_Both"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Initial_Direction find the closest direction to follow if all A_thr are
 low then it returns False (Delta)
\end_layout

\begin_layout Plain Layout
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Input} seed, peak, $A$ 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
textbf{Output} True/False, direction  
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

point=Nearest
\backslash
_Interpolation(seed)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
textbf{If} $A$[point]< aniso
\backslash
_thr 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{2em} return False 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
textbf{Else}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{2em} return True, direction
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
caption{EuDX Initial Direction}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "Alg:EuDX Initial Direction"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
Calculates the weights for trilinear interpolation and finds nearest direction
 / check total_weight threshold (max total weight is 1- that a peak has
 enough weight so we are close at a peak and that all other peaks of the
 neighbourhood contribute.
\end_layout

\begin_layout Plain Layout
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Input} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
textbf{Output} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

weights=Trilinear
\backslash
_Interpolation(seed)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
textbf{If} out of volue  
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{2em} return False 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

total
\backslash
_weight=0 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
textbf{Else}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{2em} return True, direction
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
textbf{For} 8 corners
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{2em} Delta, direction = Nearest
\backslash
_Direction
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{2em} 
\backslash
textbf{If} Delta 
\backslash
textbf{is} False
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{4em} 
\backslash
textbf{Continue}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{2em} total
\backslash
_weight += W[corner]
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{2em} new
\backslash
_direction += W[corner]$
\backslash
times$direction
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
textbf{If} total
\backslash
_weight < total
\backslash
_weight
\backslash
_thr
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{4em} return False
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
textbf{Else}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{4em} return True, normalized(new
\backslash
_direction)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
caption{EuDX New Direction}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "Alg:EuDX New Direction"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
Just compares and finds the current direction with the peak direction and
 gives back the neirest or False.
\end_layout

\begin_layout Plain Layout
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Input} seed, peak, $A$ 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
textbf{Output} True/False, direction  
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
textbf{If} maximum
\backslash
_peak < aniso
\backslash
_thr 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{2em} return False 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
textbf{For} all peaks 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{2em} 
\backslash
textbf{If} peak < $A$
\backslash
_thr 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{4em} 
\backslash
textbf{Break}
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{2em} angle = angle(peak direction, current direction)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
textbf{If} maximum
\backslash
_angle > angle
\backslash
_thr 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
hspace*{2em} return False
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
textbf{Else} return True, direction (closest peak - angular)
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
caption{EuDX Nearest Direction}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "Alg:EuDX Nearest Direction"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Evaluation with software phantoms
\end_layout

\begin_layout Subsection
Evaluation with real subjects
\end_layout

\begin_layout Standard
\align center
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="4">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Conclusion
\end_layout

\begin_layout Standard
The source code for EuDX can be found in dipy.tracking.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard

\lang british
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "diffusion"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
